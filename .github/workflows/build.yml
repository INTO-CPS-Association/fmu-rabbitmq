# This is a basic workflow to help you get started with Actions

name: rabbitmq

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the development branch
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest , macos-latest ]
        
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up CLANG
        if: matrix.os == 'ubuntu-latest'
        uses: egor-tensin/setup-clang@v1
        with:
          version: latest
          platform: x64

      - name: Prepare MSYS on windows
        if: matrix.os == 'windows-latest'
##https://github.com/actions/virtual-environments/blob/main/images/win/Windows2019-Readme.md#notes
##https://stackoverflow.com/a/64831469
        run: |
          echo "C:\msys64\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "C:\msys64\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          
      - name: CMAKE on Unix
        if: matrix.os != 'windows-latest'
        run: |
          cmake -DCMAKE_PREFIX_PATH=xercesc-config.cmake .
          
      - name: CMAKE on Windows
        if: matrix.os == 'windows-latest'
        run: |
          cmake -G "MSYS Makefiles" .
          
      - name: make
        run: |
          make
          
      - name: Upload artifact macos
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v2
        with:
          name: rabbitmq.dylib
          path: rabbitmq-fmu/rabbitmq.dylib

      - name: Upload artifact linux 
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v2
        with:
          name: librabbitmq.so
          path: rabbitmq-fmu/rabbitmq.so

      - name: Upload artifact windows
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v2
        with:
          name: rabbitmq.dll
          path: rabbitmq-fmu/rabbitmq.dll
          
  pack-fmu:
    runs-on: ubuntu-latest
    needs: build
    steps:
    
      - name: Download dll
        uses: actions/download-artifact@v2
        with:
          name: rabbitmq.dll
          path: rabbitmq-fmu/binaries/win64/

      - name: Download shared library
        uses: actions/download-artifact@v2
        with:
          name: librabbitmq.so
          path: rabbitmq-fmu/binaries/linux64/

      - name: Download dylib
        uses: actions/download-artifact@v2
        with:
          name: rabbitmq.dylib
          path: rabbitmq-fmu/binaries/darwin64/

      - name: Upload FMU 
        uses: actions/upload-artifact@v2
        with:
          name: rabbitmq-fmu
          path: rabbitmq-fmu
